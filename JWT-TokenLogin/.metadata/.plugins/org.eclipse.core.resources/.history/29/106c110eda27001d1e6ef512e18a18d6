package com.example.ldap;

import java.util.Properties;

import javax.naming.Context;
import javax.naming.NamingEnumeration;
import javax.naming.NamingException;
import javax.naming.directory.Attributes;
import javax.naming.directory.DirContext;
import javax.naming.directory.InitialDirContext;
import javax.naming.directory.SearchControls;
import javax.naming.directory.SearchResult;

import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;


@RestController
@RequestMapping(value = "/login")
public class LoginController {


	DirContext connetion;

	public void newConnection() {

		System.out.println("hello world");
		Properties env= new Properties();
		env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");
		env.put(Context.PROVIDER_URL,"ldap://localhost:10380");
		env.put(Context.SECURITY_PRINCIPAL, "uid=admin,ou=system");
		env.put(Context.SECURITY_CREDENTIALS,"secret");

		try {
			//DirContext connetion = new InitialDirContext(env);
			connetion = new InitialDirContext(env);
			System.out.println("Connetd to server   "+connetion);
		} catch (NamingException e) {
			// TODO Auto-generated catch block
			System.out.println("Not  **** Connetd to server");
			e.printStackTrace();
		}
	}
	
	public static boolean authUser(String username, String password)
	{
		try {
			Properties env = new Properties();
			env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.ldap.LdapCtxFactory");
			env.put(Context.PROVIDER_URL, "ldap://localhost:10389");
			//env.put(Context.SECURITY_PRINCIPAL, "cn="+username+",ou=users,ou=system");  //check the DN correctly
			env.put(Context.SECURITY_PRINCIPAL, "cn=swapnil,ou=users,ou=system"); 
			env.put(Context.SECURITY_CREDENTIALS, 1);
			DirContext con = new InitialDirContext(env);
			System.out.println("success");
			con.close();
			return true;
		}catch (Exception e) {
			System.out.println("failed: "+e.getMessage());
			return false;
		}
	}
	
	@PostMapping(value ="/auth")
	public String athenticate(@RequestBody User user) throws NamingException
	
	{
		System.out.println("@@@@@@@@@@@ enterd in Controller");
//		String un=user.getUsername();
//		String password=user.getPassword();
		
		
		searchUsers(2);
		
		return null ;
		
	}
	
	public void searchUsers(int uid) throws NamingException {
		String searchFilter = "(uid="+uid+")"; //  for one user
		//String searchFilterr = "(uid="+uid+")"; //  for one user
		//String searchFilter = "(&(uid=1)(cn=Smith))"; // and condition 
		//String searchFilter = "(|(uid=1)(uid=2)(cn=swapnil))"; // or condition
		String[] reqAtt = { "cn", "sn","uid" };
		SearchControls controls = new SearchControls();
		controls.setSearchScope(SearchControls.SUBTREE_SCOPE);
		controls.setReturningAttributes(reqAtt);

		NamingEnumeration users = connetion.search("ou=users,ou=system", searchFilter,controls);
        System.out.println("****************");
		SearchResult result = null;
		
		while (users.hasMore()) {
			result = (SearchResult) users.next();
			Attributes attr = result.getAttributes();
			String name = attr.get("cn").get(0).toString();
			//deleteUserFromGroup(name,"Administrators");
			System.out.println(attr.get("cn"));
			System.out.println(attr.get("sn"));
			System.out.println(attr.get("uid"));
		}

	}
	
	
	}
